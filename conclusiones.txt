UI

Este proyecto está basado en mi proyecto:

https://github.com/dkmar11/BDDcore
Que tiene un enfoque BDD.
La opción elegida fue la 2 principalmente debido a que tenia un login, sin embargo se debe de aclarar, que a pesar que el repositorio cuenta con las credenciales para el acceso a la plataforma, esto en un ambiente real no se debe realizar.
Se ha decido usar el atributo data-test, debido que normalmente estos atributos están específicamente para la automatización. Así mismo existe un selector XPATH, que se ah decido usar solo de manera demostrativa, para mostrar habilidad en estos selectores, ya que este tipo de selectores no son tan rápidos, y no es tan recomendable usarlos en exceso.
Existe la oportunidad de mejora, sobre todo en la abstracción de los pasos del  BDD, ya que se tiene que tomar en cuenta, que se tiene un tiempo limitado para el desarrollo de esta automatización.
Se a usado como gestor de versionamiento GIT por consiguiente, tiene se debería poder visualizar las ramas y los commits usados en el desarrollo del proyecto.
Existe un video demostrativo de la ejecución de este repositorio en la carpeta raíz, donde se puede visualizar la ejecución de las pruebas en un browser remoto y en un local.


------------
API
Este proyecto esta basado en mi proyecto:
https://github.com/dkmar11/Cypress-TS
Que tiene un enfoque feature testing hecho con cypress.
La principal observación del endpoint elegido es el manejo del username para el borrado o/y actualización del registro, normalmente este tipo de endpoints se usa una clave única para evitar que se borren los registros equivocados. A pesar que si se tiene un clave única, denominada ID.
Otra observación, fuera de los endpoints trabajados, es que existe uno para el login de un usuario, pero este endpoints no devuelve un token de autentificación.
 Con referencia al proyecto, sobre todo se tiene que tomar en cuenta, que es un proyecto hecho para mostrar habilidad en el framework, es claro que quizás no todas las abstracciones o manejo de archivos y/o funciones no es la mejor.
Se a usado como gestor de versionamiento GIT por consiguiente, tiene se debería poder visualizar las ramas y los commits usados en el desarrollo del proyecto.
Existe un video demostrativo de la ejecución de este repositorio en la carpeta raíz, donde se puede visualizar la ejecución de las pruebas.
